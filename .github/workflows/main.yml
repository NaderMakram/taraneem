name: preRelease

on:
  push:
    branches:
      - release

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          clean: true

      - name: Use Node.js (adjust version if needed)
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: "npm" # Cache npm dependencies

      - name: Install dependencies
        run: npm ci

      - name: Build the app for release
        run: npm run dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Access token with release permissions

      # - name: Upload release assets
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: release-assets # Replace with a descriptive name if needed
      #     path: | # Target existing assets in the pre-release
      #       ./release/${{ github.ref_name }}/*.exe
      - name: Bump version and create release
        id: create_release
        run: |
          # Bump version (you can use any versioning scheme)
          npm version patch --no-git-tag-version

          # Get the new version
          VERSION=$(node -p "require('./package.json').version")

          # Create a release
          echo "::set-output name=tag::v$VERSION"
          echo "::set-output name=title::Release $VERSION"
          echo "::set-output name=body::Automated release created by GitHub Actions"
          echo "::set-output name=draft::false"

      - name: Create GitHub release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.create_release.outputs.tag }}
          release_name: ${{ steps.create_release.outputs.title }}
          body: ${{ steps.create_release.outputs.body }}
          draft: ${{ steps.create_release.outputs.draft }}
          token: ${{ secrets.GITHUB_TOKEN }}
