name: preRelease

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          clean: true

      # - name: Use Node.js (adjust version if needed)
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 20.x
      #     cache: "npm" # Cache npm dependencies

      # - name: Install dependencies
      #   run: npm ci

      # - name: Build the app for release
      #   run: npm run dist
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Access token with release permissions

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      # - name: Get version from package.json (using Node.js)
      #   run: |
      #     const fs = require('fs');
      #     const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
      #     console.log('Version:', packageJson.version);  # Prints to console
      #     const version = packageJson.version;

      - name: Print the version (optional)
        run: echo ${{ github.ref }}

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: ./my-artifact.zip
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip
